html {
    font-family: 'Fira Sans', sans-serif;
    font-size: 20px;
    letter-spacing: 0.8px;
    min-height: 100vh;
    color: #d8e9ef;
    background-image: linear-gradient(-20deg, #025159 0%, #733b36 100%); /* CSS property sets one or more background images on an element.  */
    background-size: cover; /*  CSS property sets the size of the element's background image. In this case, it ensures that it covers the entire viewport */
}

h1 {
    margin: 0 auto 10px auto;
    color: #d8e9ef;
}

p {
    margin: 0;
}

.app-message {
  height: 20px;
  margin: 10px auto 20px auto;
}

.app-container {
    width: 250px;
    height: 420px;
    margin: 40px auto;
    text-align: center;
    border-radius: 5px;
    padding: 20px;
}

.app-circle {
    position: relative; /* CSS property that sets how an element is positioned in a document. Relative means that the element is positioned according to the normal flow of the document, however, without changing its neighbour elements. */
    margin: 40px auto;
    width: 200px;
    height: 200px;
}

.circle-shape {
    pointer-events: none; /* CSS property that sets when a particular element can become the target of pointer eventns. In this case, never. */
}

.semi-circle {
    position: absolute;
    width: 100px;
    height: 200px;
    box-sizing: border-box; /*  CSS property that sets how the browser calculates an element's total width and height. With border-box, the width and height include the content, padding, and border. */
    border: solid 6px; 
}

.left-side {
    top: 0;
    left: 0;
    transform-origin: right center; /* CSS property that defines WHERE the transformation of the transform CSS property is applied */
    transform: rotate(0edg); /* CSS property that enables static rotation, scaling, skewing or translation of an element */
    border-top-left-radius: 100px; /* CSS property that rounds the top-left corner of an element's border (at the end of padding) by specifying  the radius */
    border-bottom-left-radius: 100px; /* CSS property that rounds the bottom-left corner of an element's border (at the end of padding) by specifying  the radius */
    border-right: none; /*CSS property that sets, but in this case erase, the right border of an element*/
    z-index: 1; /* CSS property that sets the order of priority (overlapping moving to the front) of a positioned element of its descendants */
}

 .right-side {
  top: 0;
  left: 100px;
  transform-origin: left center;
  transform: rotate(0deg);
  border-top-right-radius: 100px;
  border-bottom-right-radius: 100px;
  border-left: none;
}


.circle {
  border-color: #bf5239;
}

.circle-mask {
  border-color: #e85a71;
}

.app-counter-box {
  font-family: 'Droid Sans Mono', monospace;
  font-size: 250%;
  position: relative;
  top: 50px;
  color: #d8e9ef;
}



button {
  position: relative;
  top: 0;
  font-size: 30%;
  text-transform: uppercase; /*CSS property that specifies how to captalize an element's text. Options: Captalize, Uppercase and Lowercase*/
  letter-spacing: 1px;
  border: none;
  background: none;
  outline: none;
  color: #d8e9ef;
}

button:hover {
  color: #90c0d1;
}